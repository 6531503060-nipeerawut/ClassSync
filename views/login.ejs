<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* General Styling */
        body {
            margin: 0;
            font-family: 'Poppins', sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background: url('public/images/Background.jpg') no-repeat center center fixed;
            background-size: cover;
            color: hsl(0, 0%, 100%);
            position: relative;
            overflow: hidden;
        }

        /* Background Overlay */
        body::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.6);
            z-index: 1;
        }

        /* Starry Sky */
        .stars {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 0;
            pointer-events: none;
        }

        .star {
            position: absolute;
            background-color: white;
            border-radius: 50%;
            opacity: 0.9;
            animation: blink 2s infinite alternate;
            box-shadow: 0 0 8px 2px rgba(255, 255, 255, 0.7); /* Glowing effect */
        }

        /* Blinking Effect */
        @keyframes blink {
            0% {
                opacity: 0.3;
            }
            100% {
                opacity: 1;
            }
        }

        /* Shooting Star Styling */
        .shooting-star {
            position: absolute;
            top: -10%;
            width: 6px;
            height: 6px;
            background-color: white;
            border-radius: 50%;
            box-shadow: 0 0 15px rgba(255, 255, 255, 0.8);
            opacity: 0;
            animation: shooting-star 4s linear infinite;
        }

        /* Shooting Star Animation */
        @keyframes shooting-star {
            0% {
                left: -10%;
                top: 10%;
                transform: scale(1);
                opacity: 1;
            }
            100% {
                left: 100%;
                top: 90%;
                transform: scale(0.7);
                opacity: 0;
            }
        }

        /* Form Container Styling */
        .form-container {
            position: relative;
            z-index: 2;
            background: hsla(0, 0%, 42%, 0.378);
            border: 2px solid hsl(0, 0%, 100%);
            border-radius: 1rem;
            padding: 2rem;
            width: 90%;
            max-width: 600px;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
        }

        h1 {
            font-size: 1.75rem;
            font-weight: bold;
            text-align: center;
            margin-bottom: 1.5rem;
        }

        .row {
            margin-bottom: 1rem;
        }

        input, select {
            background: none;
            color: hsl(0, 0%, 100%);
            border: 2px solid hsl(0, 0%, 100%);
            border-radius: 0.5rem;
            padding: 0.5rem;
        }

        input:focus, select:focus {
            outline: none;
            border-color: hsl(0, 0%, 90%);
        }

        button {
            width: 100%;
            background: hsl(0, 0%, 100%);
            color: hsl(0, 0%, 10%);
            border: none;
            padding: 0.75rem;
            font-size: 1rem;
            font-weight: bold;
            border-radius: 0.5rem;
            cursor: pointer;
            transition: 0.3s;
        }

        button:hover {
            background: hsl(0, 0%, 90%);
            letter-spacing: 1px;
        }

        .links {
            text-align: center;
            margin-top: 1rem;
        }

        .links a {
            color: hsl(0, 0%, 100%);
            text-decoration: none;
        }

        .links a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <!-- Starry Sky -->
    <div class="stars"></div>

    <!-- Shooting Star (Multiple Stars) -->
    <div id="shooting-stars-container"></div>

    <div class="form-container">
        <h1>Login</h1>
        <% if (errState) { %>
            <div class="alert alert-danger"><%= message %></div>
        <% } else if (errState === false) { %>
            <div class="alert alert-success"><%= message %></div>
        <% } %>
        <form action="/login" method="POST">
            <div class="mb-3">
                <label for="email" class="form-label">Email</label>
                <input type="email" name="email" class="form-control" required>
            </div>
            <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <input type="password" name="password" class="form-control" required>
            </div>
            <button type="submit">Login</button>
                </form>
        <div class="links mt-3">
            <a href="/register">Don't have an account?</a>
        </div>
    </div>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Create stars randomly in the background
        const starsContainer = document.querySelector('.stars');
        const numberOfStars = 200;  // Increase the number of stars

        for (let i = 0; i < numberOfStars; i++) {
            const star = document.createElement('div');
            star.classList.add('star');
            const size = Math.random() * 3 + 1; // Random size between 1px and 4px
            star.style.width = `${size}px`;
            star.style.height = `${size}px`;
            star.style.top = `${Math.random() * 100}vh`;  // Random vertical position
            star.style.left = `${Math.random() * 100}vw`;  // Random horizontal position
            star.style.animationDuration = `${Math.random() * 2 + 1}s`;  // Random animation duration for blinking
            star.style.animationDelay = `${Math.random() * 2}s`;  // Random delay for animation start

            starsContainer.appendChild(star);
        }

        // Shooting Star Generator
        const shootingStarsContainer = document.getElementById('shooting-stars-container');
        const numberOfShootingStars = 10;  // Increase number of shooting stars

        function createShootingStar() {
            const shootingStar = document.createElement('div');
            shootingStar.classList.add('shooting-star');

            // Random starting position for each shooting star
            shootingStar.style.left = `${Math.random() * 100}vw`;  // Random horizontal position
            shootingStar.style.top = `${Math.random() * 50}vh`;  // Random vertical position (from the top to halfway)

            // Random animation duration between 2s and 5s
            shootingStar.style.animationDuration = `${Math.random() * 3 + 2}s`;  

            shootingStarsContainer.appendChild(shootingStar);

            // Remove the star after the animation ends
            setTimeout(() => {
                shootingStarsContainer.removeChild(shootingStar);
            }, (Math.random() * 3 + 2) * 1000);  // Duration of animation in ms
        }

        // Create shooting stars at intervals
        setInterval(createShootingStar, 1000);  // Create a new star every 1 second
    </script>
</body>
</html>
